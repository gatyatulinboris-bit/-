import os
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

BOT_TOKEN = os.getenv("BOT_TOKEN")
ALLOWED_USERS = {7299174753}  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID
BOT_NAME = "–≤–∞—Å–∏–ª–∏–π"

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ===
async def greet_user(update, context):
    uid = update.effective_user.id
    if uid not in ALLOWED_USERS:
        await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é.")
        return

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞—Å–∏–ª–∏–π üëã\n"
        "–ö–∞–∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞–π—Ç–∏ –¥–ª—è —Ç–µ–±—è?"
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def handle_message(update, context):
    uid = update.effective_user.id
    text = update.message.text.strip()

    if uid not in ALLOWED_USERS:
        await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.")
        return

    if text.lower().startswith(f"{BOT_NAME} –ø—Ä–∏–≤–µ—Ç"):
        await greet_user(update, context)
        return

    if "–Ω–∞–π–¥–∏" in text.lower() and "–ø–æ—Å—Ç–∞–≤" in text.lower():
        await update.message.reply_text(
            f"üîç –ò—â—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n¬´{text}¬ª\n"
            "‚è≥ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ–∑–∂–µ –ø–æ–¥–∫–ª—é—á–∏–º –ò–ò)"
        )
        return

    await update.message.reply_text(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {text}")

# === –ó–∞–ø—É—Å–∫ ===
def main():
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    print("‚úÖ –í–∞—Å–∏–ª–∏–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", greet_user))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –í–∞—Å–∏–ª–∏–π –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()  # ‚Äî —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –¥–µ—Ä–∂–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è

if __name__ == "__main__":
    main()
