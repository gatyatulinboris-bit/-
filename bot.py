import os
from openai import OpenAI
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

ALLOWED_USERS = {7299174753}  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID
BOT_NAME = "–≤–∞—Å–∏–ª–∏–π"

# === –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–∞ ===
conversation_history = []  # —Ö—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π


# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ===
async def greet_user(update, context):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞—Å–∏–ª–∏–π üëã\n"
        "–ü–æ–º–æ–≥–∞—é –∏—Å–∫–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ HVAC-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.\n"
        "–ß—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏?"
    )


# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è ===
async def handle_message(update, context):
    uid = update.effective_user.id
    text = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    if uid not in ALLOWED_USERS:
        await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.")
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è
    if text.lower().startswith(f"{BOT_NAME} –ø—Ä–∏–≤–µ—Ç"):
        await greet_user(update, context)
        return

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–æ —Å –ø–æ–∏—Å–∫–æ–º –∏–ª–∏ –ø–æ—Å—Ç–∞–≤–∫–æ–π
    if "–Ω–∞–π–¥–∏" in text.lower() or "–ø–æ—Å—Ç–∞–≤" in text.lower():
        await update.message.reply_text("ü§ñ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º...")

        try:
            completion = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {
                        "role": "system",
                        "content": (
                            "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ HVAC-–∫–æ–º–ø–∞–Ω–∏–∏. "
                            "–ü–æ–º–æ–≥–∞–µ—à—å –∏—Å–∫–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ "
                            "–≤–µ–Ω—Ç–∏–ª—è—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è."
                        ),
                    },
                    {"role": "user", "content": text},
                ],
            )

            answer = completion.choices[0].message.content
            await update.message.reply_text(answer)

        except Exception as e:
            await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {e}")
        return

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ ‚Äî –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    if not any(word in text.lower() for word in ["–Ω–∞–π–¥–∏", "–ø–æ—Å—Ç–∞–≤", "–∑–∞–∫–∞–∂–∏", "–∏—â—É"]):
        # –í–∞—Å–∏–ª–∏–π –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∏—Ç –∏–ª–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –º—è–≥–∫–æ
        await update.message.reply_text("üß© –Ø —Ç–µ–±—è —É—Å–ª—ã—à–∞–ª, –¥—É–º–∞—é, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å.")


# === –ó–∞–ø—É—Å–∫ ===
def main():
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    print("‚úÖ –í–∞—Å–∏–ª–∏–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", greet_user))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –í–∞—Å–∏–ª–∏–π –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()  # ‚Üê –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã


if __name__ == "__main__":
    main()
