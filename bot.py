import os
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

# === –¢–≤–æ–π —Ç–æ–∫–µ–Ω –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–º—ã –¥–æ–±–∞–≤–∏–º –µ–≥–æ –Ω–∞ Render) ===
BOT_TOKEN = os.getenv("BOT_TOKEN")

# === –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–æ–±–∞–≤—å —Å–≤–æ–π Telegram ID) ===
ALLOWED_USERS = {7299174753}  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ @userinfobot

# === –ö–æ–º–∞–Ω–¥–∞ /start –∏–ª–∏ ‚Äú–í–∞—Å–∏–ª–∏ –ü—Ä–∏–≤–µ—Ç!‚Äù ===
async def start(update, context):
    uid = update.effective_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—Ä–µ—à—ë–Ω
    if uid not in ALLOWED_USERS:
        await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é.")
        return

    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        "–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.\n"
        "–ù–∞–ø–∏—à–∏, —á—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n"
        "üîç –ù–∞–π–¥–∏ –º–Ω–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–≥–Ω–µ–∑–∞—â–∏—Ç–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–æ–≤ EI150."
    )

# === –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ (–ø–æ–∫–∞ –±–µ–∑ –ò–ò) ===
async def handle_message(update, context):
    uid = update.effective_user.id
    text = update.message.text.strip()

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
    if uid not in ALLOWED_USERS:
        await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.")
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç ‚Äú–í–∞—Å–∏–ª–∏ –ü—Ä–∏–≤–µ—Ç‚Äù ‚Äî –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Å—Ç–∞—Ä—Ç
    if text.lower().startswith("–≤–∞—Å–∏–ª–∏ –ø—Ä–∏–≤–µ—Ç"):
        await start(update, context)
        return

    # –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    if "–Ω–∞–π–¥–∏" in text.lower() and "–ø–æ—Å—Ç–∞–≤—â–∏–∫" in text.lower():
        await update.message.reply_text(
            "üîç –ò—â—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É...\n"
            "‚è≥ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ–∑–∂–µ –ø–æ–¥–∫–ª—é—á–∏–º –ò–ò –∏ —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫)"
        )
        return

    # –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî —ç—Ö–æ
    await update.message.reply_text(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {text}")

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
def main():
    if not BOT_TOKEN:
        raise SystemExit("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN ‚Äî –¥–æ–±–∞–≤—å –µ–≥–æ –≤ Environment Variables.")
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()

if __name__ == "__main__":
    main()
