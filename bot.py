import os
import asyncio
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, MessageHandler, CommandHandler, filters, ContextTypes

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not BOT_TOKEN:
    BOT_TOKEN = "8396494240:AAG3rJjtm6CXCqfrq8XgOGSncI_bYNe0Cwc"  # —Ä–µ–∑–µ—Ä–≤, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ –≤ Render

PORT = int(os.environ.get("PORT", 10000))

# === Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
app = Flask(__name__)

# === –°–æ–∑–¥–∞–Ω–∏–µ Telegram-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
application = Application.builder().token(BOT_TOKEN).build()

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –∂–∏–≤ –∏ –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å!")

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name}: {text}")
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –∂–∏–≤ üü¢")

# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ ===
application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ —Å –ª—é–±—ã–º –ø—É—Ç—ë–º (–≤ —Ç–æ–º —á–∏—Å–ª–µ —Å —Ç–æ–∫–µ–Ω–æ–º) ===
@app.route("/", methods=["POST"])
@app.route("/<path:path>", methods=["POST"])
def webhook(path=None):
    try:
        update = Update.de_json(request.get_json(force=True), application.bot)
        asyncio.run(application.process_update(update))
        return "ok", 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–ø–¥–µ–π—Ç–∞: {e}")
        return "error", 500

# === –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ ===
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞...")
    app.run(host="0.0.0.0", port=PORT)
